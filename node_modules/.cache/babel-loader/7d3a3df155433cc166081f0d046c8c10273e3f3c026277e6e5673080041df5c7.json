{"ast":null,"code":"require('dotenv').config();\nconst dotenv = require('dotenv');\ndotenv.config();\nconsole.log(\"API Key: \", process.env.OPENAI_API_KEY);\nconst express = require(\"express\");\nconst cors = require(\"cors\");\nconst axios = require(\"axios\");\nconst app = express();\nconst port = 3001;\napp.use(cors());\napp.get(\"/generate-recipe\", async (req, res) => {\n  try {\n    const ingredients = req.query.ingredients;\n    const prompt = `Create a recipe with a unique name using the following ingredients:\\n${ingredients}\\n\\nPlease provide the recipe in the following format:\\n\\nRecipe Name:\\n\\n{{Recipe Name}}\\n\\nIngredients:\\n{{Ingredients}}\\n\\nInstructions:\\n{{Instructions}}\\n`;\n    console.log(\"Sending request to OpenAI API...\");\n    const response = await axios.post(\"https://api.openai.com/v1/engines/text-davinci-002/completions\", {\n      prompt: prompt,\n      max_tokens: 250,\n      n: 1,\n      stop: null,\n      temperature: 0.8\n    }, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${process.env.OPENAI_API_KEY}`\n      }\n    });\n    console.log(\"Received response:\", response);\n    const recipeText = response.data.choices[0].text.trim();\n    res.send(recipeText);\n  } catch (error) {\n    console.error(\"Error generating recipe:\", error);\n    console.error(\"Error details:\", error.response ? error.response.data : null);\n    res.status(500).send(\"Error generating recipe\");\n  }\n});\n\n// Add this endpoint to support the frontend ingredients input\napp.get(\"/search-ingredients\", async (req, res) => {\n  try {\n    const searchTerm = req.query.q;\n    const ingredientApiUrl = `https://api.spoonacular.com/food/ingredients/search?apiKey=${process.env.SPOONACULAR_API_KEY}&query=${searchTerm}`;\n    const response = await axios.get(ingredientApiUrl);\n    res.send(response.data.results);\n  } catch (error) {\n    console.error(\"Error searching for ingredients:\", error);\n    console.error(\"Error details:\", error.response ? error.response.data : null);\n    res.status(500).send(\"Error searching for ingredients\");\n  }\n});\napp.listen(port, () => {\n  console.log(`Server listening at http://localhost:${port}`);\n});","map":{"version":3,"names":["require","config","dotenv","console","log","process","env","OPENAI_API_KEY","express","cors","axios","app","port","use","get","req","res","ingredients","query","prompt","response","post","max_tokens","n","stop","temperature","headers","recipeText","data","choices","text","trim","send","error","status","searchTerm","q","ingredientApiUrl","SPOONACULAR_API_KEY","results","listen"],"sources":["/Users/carson/Desktop/Projects/AI-Chef/src/RecipeList.js"],"sourcesContent":["require('dotenv').config();\nconst dotenv = require('dotenv');\ndotenv.config();\nconsole.log(\"API Key: \", process.env.OPENAI_API_KEY);\n\nconst express = require(\"express\");\nconst cors = require(\"cors\");\nconst axios = require(\"axios\");\n\nconst app = express();\nconst port = 3001;\n\napp.use(cors());\n\napp.get(\"/generate-recipe\", async (req, res) => {\n  try {\n    const ingredients = req.query.ingredients;\n    const prompt = `Create a recipe with a unique name using the following ingredients:\\n${ingredients}\\n\\nPlease provide the recipe in the following format:\\n\\nRecipe Name:\\n\\n{{Recipe Name}}\\n\\nIngredients:\\n{{Ingredients}}\\n\\nInstructions:\\n{{Instructions}}\\n`;\n\n    console.log(\"Sending request to OpenAI API...\");\n\n    const response = await axios.post(\"https://api.openai.com/v1/engines/text-davinci-002/completions\", {\n      prompt: prompt,\n      max_tokens: 250,\n      n: 1,\n      stop: null,\n      temperature: 0.8,\n    }, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${process.env.OPENAI_API_KEY}`\n      }\n    });\n\n    console.log(\"Received response:\", response);\n\n    const recipeText = response.data.choices[0].text.trim();\n    res.send(recipeText);\n  } catch (error) {\n    console.error(\"Error generating recipe:\", error);\n    console.error(\"Error details:\", error.response ? error.response.data : null);\n    res.status(500).send(\"Error generating recipe\");\n  }\n});\n\n// Add this endpoint to support the frontend ingredients input\napp.get(\"/search-ingredients\", async (req, res) => {\n  try {\n    const searchTerm = req.query.q;\n    const ingredientApiUrl = `https://api.spoonacular.com/food/ingredients/search?apiKey=${process.env.SPOONACULAR_API_KEY}&query=${searchTerm}`;\n\n    const response = await axios.get(ingredientApiUrl);\n\n    res.send(response.data.results);\n  } catch (error) {\n    console.error(\"Error searching for ingredients:\", error);\n    console.error(\"Error details:\", error.response ? error.response.data : null);\n    res.status(500).send(\"Error searching for ingredients\");\n  }\n});\n\napp.listen(port, () => {\n  console.log(`Server listening at http://localhost:${port}`);\n});"],"mappings":"AAAAA,OAAO,CAAC,QAAQ,CAAC,CAACC,MAAM,CAAC,CAAC;AAC1B,MAAMC,MAAM,GAAGF,OAAO,CAAC,QAAQ,CAAC;AAChCE,MAAM,CAACD,MAAM,CAAC,CAAC;AACfE,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEC,OAAO,CAACC,GAAG,CAACC,cAAc,CAAC;AAEpD,MAAMC,OAAO,GAAGR,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMS,IAAI,GAAGT,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMU,KAAK,GAAGV,OAAO,CAAC,OAAO,CAAC;AAE9B,MAAMW,GAAG,GAAGH,OAAO,CAAC,CAAC;AACrB,MAAMI,IAAI,GAAG,IAAI;AAEjBD,GAAG,CAACE,GAAG,CAACJ,IAAI,CAAC,CAAC,CAAC;AAEfE,GAAG,CAACG,GAAG,CAAC,kBAAkB,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EAC9C,IAAI;IACF,MAAMC,WAAW,GAAGF,GAAG,CAACG,KAAK,CAACD,WAAW;IACzC,MAAME,MAAM,GAAI,wEAAuEF,WAAY,iKAAgK;IAEnQd,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;IAE/C,MAAMgB,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAC,gEAAgE,EAAE;MAClGF,MAAM,EAAEA,MAAM;MACdG,UAAU,EAAE,GAAG;MACfC,CAAC,EAAE,CAAC;MACJC,IAAI,EAAE,IAAI;MACVC,WAAW,EAAE;IACf,CAAC,EAAE;MACDC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAG,UAASrB,OAAO,CAACC,GAAG,CAACC,cAAe;MACxD;IACF,CAAC,CAAC;IAEFJ,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEgB,QAAQ,CAAC;IAE3C,MAAMO,UAAU,GAAGP,QAAQ,CAACQ,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,CAACC,IAAI,CAAC,CAAC;IACvDf,GAAG,CAACgB,IAAI,CAACL,UAAU,CAAC;EACtB,CAAC,CAAC,OAAOM,KAAK,EAAE;IACd9B,OAAO,CAAC8B,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD9B,OAAO,CAAC8B,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACb,QAAQ,GAAGa,KAAK,CAACb,QAAQ,CAACQ,IAAI,GAAG,IAAI,CAAC;IAC5EZ,GAAG,CAACkB,MAAM,CAAC,GAAG,CAAC,CAACF,IAAI,CAAC,yBAAyB,CAAC;EACjD;AACF,CAAC,CAAC;;AAEF;AACArB,GAAG,CAACG,GAAG,CAAC,qBAAqB,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EACjD,IAAI;IACF,MAAMmB,UAAU,GAAGpB,GAAG,CAACG,KAAK,CAACkB,CAAC;IAC9B,MAAMC,gBAAgB,GAAI,8DAA6DhC,OAAO,CAACC,GAAG,CAACgC,mBAAoB,UAASH,UAAW,EAAC;IAE5I,MAAMf,QAAQ,GAAG,MAAMV,KAAK,CAACI,GAAG,CAACuB,gBAAgB,CAAC;IAElDrB,GAAG,CAACgB,IAAI,CAACZ,QAAQ,CAACQ,IAAI,CAACW,OAAO,CAAC;EACjC,CAAC,CAAC,OAAON,KAAK,EAAE;IACd9B,OAAO,CAAC8B,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IACxD9B,OAAO,CAAC8B,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACb,QAAQ,GAAGa,KAAK,CAACb,QAAQ,CAACQ,IAAI,GAAG,IAAI,CAAC;IAC5EZ,GAAG,CAACkB,MAAM,CAAC,GAAG,CAAC,CAACF,IAAI,CAAC,iCAAiC,CAAC;EACzD;AACF,CAAC,CAAC;AAEFrB,GAAG,CAAC6B,MAAM,CAAC5B,IAAI,EAAE,MAAM;EACrBT,OAAO,CAACC,GAAG,CAAE,wCAAuCQ,IAAK,EAAC,CAAC;AAC7D,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
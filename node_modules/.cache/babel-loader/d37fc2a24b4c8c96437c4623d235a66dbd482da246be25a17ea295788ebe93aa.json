{"ast":null,"code":"var _jsxFileName = \"/Users/carson/Desktop/Projects/AI-Chef/src/RecipeList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./RecipeList.css\";\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RecipeList() {\n  _s();\n  const [ingredients, setIngredients] = useState(\"\");\n  const [generatedRecipe, setGeneratedRecipe] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const generateRecipes = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(`http://localhost:3001/generate-recipe?ingredients=${encodeURIComponent(ingredients)}`);\n      const recipeText = await response.text();\n      console.log(\"Generated recipe:\", recipeText);\n      setGeneratedRecipe(recipeText);\n    } catch (error) {\n      console.error(\"Error generating recipe:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    generateRecipes();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: ingredients,\n        onChange: e => setIngredients(e.target.value),\n        placeholder: \"Enter the ingredients you have one per line\",\n        rows: 5,\n        cols: 50\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"generate-button\",\n        children: loading ? \"Generating...\" : generatedRecipe ? \"Regenerate\" : \"Generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipe-container\",\n      children: generatedRecipe && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"generated-recipe\",\n        children: /*#__PURE__*/_jsxDEV(\"pre\", {\n          dangerouslySetInnerHTML: {\n            __html: generatedRecipe.replace(/(Recipe Name:\\n|Ingredients:\\n|Instructions:\\n)/g, '<span class=\"header\">$1</span>')\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(RecipeList, \"CPXVzfJb3tbONTG0Du+aCf4Zipg=\");\n_c = RecipeList;\nexport default RecipeList;\nvar _c;\n$RefreshReg$(_c, \"RecipeList\");","map":{"version":3,"names":["React","useState","Navbar","jsxDEV","_jsxDEV","RecipeList","_s","ingredients","setIngredients","generatedRecipe","setGeneratedRecipe","loading","setLoading","generateRecipes","response","fetch","encodeURIComponent","recipeText","text","console","log","error","handleSubmit","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","rows","cols","type","dangerouslySetInnerHTML","__html","replace","_c","$RefreshReg$"],"sources":["/Users/carson/Desktop/Projects/AI-Chef/src/RecipeList.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./RecipeList.css\";\nimport Navbar from './Navbar';\n\n\nfunction RecipeList() {\n  const [ingredients, setIngredients] = useState(\"\");\n  const [generatedRecipe, setGeneratedRecipe] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const generateRecipes = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(\n        `http://localhost:3001/generate-recipe?ingredients=${encodeURIComponent(ingredients)}`\n      );\n\n      const recipeText = await response.text();\n      console.log(\"Generated recipe:\", recipeText);\n\n      setGeneratedRecipe(recipeText);\n    } catch (error) {\n      console.error(\"Error generating recipe:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    generateRecipes();\n  };\n\n  return (\n    <div className=\"App\">\n      <Navbar/>\n      <form onSubmit={handleSubmit}>\n        <textarea\n          value={ingredients}\n          onChange={(e) => setIngredients(e.target.value)}\n          placeholder=\"Enter the ingredients you have one per line\"\n          rows={5}\n          cols={50}\n        />\n        <br />\n        <button type=\"submit\" className=\"generate-button\">\n          {loading ? \"Generating...\" : generatedRecipe ? \"Regenerate\" : \"Generate\"}\n        </button>\n      </form>\n      <div className=\"recipe-container\">\n        {generatedRecipe && (\n          <div className=\"generated-recipe\">\n            <pre\n              dangerouslySetInnerHTML={{\n                __html: generatedRecipe\n                .replace(/(Recipe Name:\\n|Ingredients:\\n|Instructions:\\n)/g, '<span class=\"header\">$1</span>'),              \n              }}\n            ></pre>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default RecipeList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/carson/Desktop/AI-Chef/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './styles.css';\nimport RecipeList from './RecipeList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [ingredients, setIngredients] = useState('');\n  const [recipes, setRecipes] = useState([]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const fetchedRecipes = await fetchRecipes(ingredients);\n    setRecipes(fetchedRecipes);\n  };\n  const fetchRecipes = async ingredients => {\n    // Replace with a call to your AI recipe generator API\n    const response = await fetch(`https://your-api-url?ingredients=${ingredients}`);\n    const data = await response.json();\n    return data.recipes;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Fridge Recipes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"ingredients\",\n        children: \"Enter ingredients:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"ingredients\",\n        value: ingredients,\n        onChange: e => setIngredients(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Generate Recipes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RecipeList, {\n      recipes: recipes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"pZbyDrdPpumVMNR/PIi3M0qo4PQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","RecipeList","jsxDEV","_jsxDEV","App","_s","ingredients","setIngredients","recipes","setRecipes","handleSubmit","e","preventDefault","fetchedRecipes","fetchRecipes","response","fetch","data","json","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","value","onChange","target","type","_c","$RefreshReg$"],"sources":["/Users/carson/Desktop/AI-Chef/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './styles.css';\nimport RecipeList from './RecipeList';\n\nfunction App() {\n  const [ingredients, setIngredients] = useState('');\n  const [recipes, setRecipes] = useState([]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const fetchedRecipes = await fetchRecipes(ingredients);\n    setRecipes(fetchedRecipes);\n  };\n\n  const fetchRecipes = async (ingredients) => {\n    // Replace with a call to your AI recipe generator API\n    const response = await fetch(`https://your-api-url?ingredients=${ingredients}`);\n    const data = await response.json();\n    return data.recipes;\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Fridge Recipes</h1>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"ingredients\">Enter ingredients:</label>\n        <textarea\n          id=\"ingredients\"\n          value={ingredients}\n          onChange={(e) => setIngredients(e.target.value)}\n        ></textarea>\n        <button type=\"submit\">Generate Recipes</button>\n      </form>\n      <RecipeList recipes={recipes} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,cAAc;AACrB,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMU,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMC,cAAc,GAAG,MAAMC,YAAY,CAACR,WAAW,CAAC;IACtDG,UAAU,CAACI,cAAc,CAAC;EAC5B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOR,WAAW,IAAK;IAC1C;IACA,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAE,oCAAmCV,WAAY,EAAC,CAAC;IAC/E,MAAMW,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAClC,OAAOD,IAAI,CAACT,OAAO;EACrB,CAAC;EAED,oBACEL,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBjB,OAAA;MAAAiB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACvBrB,OAAA;MAAMsB,QAAQ,EAAEf,YAAa;MAAAU,QAAA,gBAC3BjB,OAAA;QAAOuB,OAAO,EAAC,aAAa;QAAAN,QAAA,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACvDrB,OAAA;QACEwB,EAAE,EAAC,aAAa;QAChBC,KAAK,EAAEtB,WAAY;QACnBuB,QAAQ,EAAGlB,CAAC,IAAKJ,cAAc,CAACI,CAAC,CAACmB,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACtC,eACZrB,OAAA;QAAQ4B,IAAI,EAAC,QAAQ;QAAAX,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC1C,eACPrB,OAAA,CAACF,UAAU;MAACO,OAAO,EAAEA;IAAQ;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC5B;AAEV;AAACnB,EAAA,CAhCQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
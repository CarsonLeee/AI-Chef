{"ast":null,"code":"var _jsxFileName = \"/Users/carson/Desktop/Projects/AI-Chef/src/RecipeList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./RecipeList.css\";\nimport Navbar from \"./Navbar\";\nimport robotImage from \"./images/robot-image.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction RecipeList() {\n  _s();\n  const [ingredients, setIngredients] = useState(\"\");\n  const [generatedRecipe, setGeneratedRecipe] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const generateRecipes = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(`http://localhost:3001/generate-recipe?ingredients=${encodeURIComponent(ingredients)}`);\n      const recipeData = await response.json(); // receive JSON response\n      console.log(\"Received recipe data:\", recipeData);\n\n      // Create recipe object using data from the API\n      const recipe = {\n        name: recipeData.name ? recipeData.name : \"No Name\",\n        ingredients: recipeData.ingredients ? recipeData.ingredients.split(\"\\n\").slice(1) : [],\n        // slice(1) to ignore the first 'Ingredients:' line\n        instructions: recipeData.instructions ? recipeData.instructions.split(\"\\n\").slice(1) : [] // slice(1) to ignore the first 'Instructions:' line\n      };\n\n      setGeneratedRecipe(recipe);\n    } catch (error) {\n      console.error(\"Error generating recipe:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    generateRecipes();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-container\",\n        children: [generatedRecipe ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"generated-recipe\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Recipe Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: generatedRecipe.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Ingredients:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: generatedRecipe.ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: ingredient\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Instructions:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n            children: generatedRecipe.instructions.map((instruction, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: instruction\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: robotImage,\n          alt: \"Robot Chef\",\n          className: \"robot-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"AI Chef\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: ingredients,\n              onChange: e => setIngredients(e.target.value),\n              placeholder: \"Enter the ingredients you have one per line\",\n              rows: 5,\n              cols: 50\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"generate-button\",\n              children: loading ? \"Generating...\" : generatedRecipe ? \"Regenerate\" : \"Generate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(RecipeList, \"31ZKtY0cT54JA5wc+jhn24m/4RQ=\");\n_c = RecipeList;\nexport default RecipeList;\nvar _c;\n$RefreshReg$(_c, \"RecipeList\");","map":{"version":3,"names":["React","useState","Navbar","robotImage","jsxDEV","_jsxDEV","Fragment","_Fragment","RecipeList","_s","ingredients","setIngredients","generatedRecipe","setGeneratedRecipe","loading","setLoading","generateRecipes","response","fetch","encodeURIComponent","recipeData","json","console","log","recipe","name","split","slice","instructions","error","handleSubmit","e","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","ingredient","index","instruction","src","alt","onSubmit","value","onChange","target","placeholder","rows","cols","type","_c","$RefreshReg$"],"sources":["/Users/carson/Desktop/Projects/AI-Chef/src/RecipeList.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./RecipeList.css\";\nimport Navbar from \"./Navbar\";\nimport robotImage from \"./images/robot-image.png\";\n\nfunction RecipeList() {\n  const [ingredients, setIngredients] = useState(\"\");\n  const [generatedRecipe, setGeneratedRecipe] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const generateRecipes = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(\n        `http://localhost:3001/generate-recipe?ingredients=${encodeURIComponent(\n          ingredients\n        )}`\n      );\n\n      const recipeData = await response.json(); // receive JSON response\n      console.log(\"Received recipe data:\", recipeData);\n\n      // Create recipe object using data from the API\n      const recipe = {\n        name: recipeData.name ? recipeData.name : \"No Name\",\n        ingredients: recipeData.ingredients\n          ? recipeData.ingredients.split(\"\\n\").slice(1)\n          : [], // slice(1) to ignore the first 'Ingredients:' line\n        instructions: recipeData.instructions\n          ? recipeData.instructions.split(\"\\n\").slice(1)\n          : [], // slice(1) to ignore the first 'Instructions:' line\n      };\n\n      setGeneratedRecipe(recipe);\n    } catch (error) {\n      console.error(\"Error generating recipe:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    generateRecipes();\n  };\n\n  return (\n    <>\n      <Navbar />\n      <div className=\"App\">\n        <div className=\"content-container\">\n          {generatedRecipe ? (\n            <div className=\"generated-recipe\">\n              <h3>Recipe Name:</h3>\n              <h2>{generatedRecipe.name}</h2>\n              <h2>Ingredients:</h2>\n              <ul>\n                {generatedRecipe.ingredients.map((ingredient, index) => (\n                  <li key={index}>{ingredient}</li>\n                ))}\n              </ul>\n              <h3>Instructions:</h3>\n              <ol>\n                {generatedRecipe.instructions.map((instruction, index) => (\n                  <li key={index}>{instruction}</li>\n                ))}\n              </ol>\n            </div>\n          ) : (\n            <img src={robotImage} alt=\"Robot Chef\" className=\"robot-image\" />\n          )}\n          <div className=\"form-container\">\n            <h1>AI Chef</h1>\n            <form onSubmit={handleSubmit}>\n              <textarea\n                value={ingredients}\n                onChange={(e) => setIngredients(e.target.value)}\n                placeholder=\"Enter the ingredients you have one per line\"\n                rows={5}\n                cols={50}\n              />\n              <br />\n              <button type=\"submit\" className=\"generate-button\">\n                {loading\n                  ? \"Generating...\"\n                  : generatedRecipe\n                  ? \"Regenerate\"\n                  : \"Generate\"}\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default RecipeList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,kBAAkB;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMe,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACFD,UAAU,CAAC,IAAI,CAAC;MAChB,MAAME,QAAQ,GAAG,MAAMC,KAAK,CACzB,qDAAoDC,kBAAkB,CACrET,WACF,CAAE,EACJ,CAAC;MAED,MAAMU,UAAU,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC,CAAC;MAC1CC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEH,UAAU,CAAC;;MAEhD;MACA,MAAMI,MAAM,GAAG;QACbC,IAAI,EAAEL,UAAU,CAACK,IAAI,GAAGL,UAAU,CAACK,IAAI,GAAG,SAAS;QACnDf,WAAW,EAAEU,UAAU,CAACV,WAAW,GAC/BU,UAAU,CAACV,WAAW,CAACgB,KAAK,CAAC,IAAI,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC,GAC3C,EAAE;QAAE;QACRC,YAAY,EAAER,UAAU,CAACQ,YAAY,GACjCR,UAAU,CAACQ,YAAY,CAACF,KAAK,CAAC,IAAI,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC,GAC5C,EAAE,CAAE;MACV,CAAC;;MAEDd,kBAAkB,CAACW,MAAM,CAAC;IAC5B,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdP,OAAO,CAACO,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD,CAAC,SAAS;MACRd,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMe,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBhB,eAAe,CAAC,CAAC;EACnB,CAAC;EAED,oBACEX,OAAA,CAAAE,SAAA;IAAA0B,QAAA,gBACE5B,OAAA,CAACH,MAAM;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVhC,OAAA;MAAKiC,SAAS,EAAC,KAAK;MAAAL,QAAA,eAClB5B,OAAA;QAAKiC,SAAS,EAAC,mBAAmB;QAAAL,QAAA,GAC/BrB,eAAe,gBACdP,OAAA;UAAKiC,SAAS,EAAC,kBAAkB;UAAAL,QAAA,gBAC/B5B,OAAA;YAAA4B,QAAA,EAAI;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrBhC,OAAA;YAAA4B,QAAA,EAAKrB,eAAe,CAACa;UAAI;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC/BhC,OAAA;YAAA4B,QAAA,EAAI;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrBhC,OAAA;YAAA4B,QAAA,EACGrB,eAAe,CAACF,WAAW,CAAC6B,GAAG,CAAC,CAACC,UAAU,EAAEC,KAAK,kBACjDpC,OAAA;cAAA4B,QAAA,EAAiBO;YAAU,GAAlBC,KAAK;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAkB,CACjC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACLhC,OAAA;YAAA4B,QAAA,EAAI;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtBhC,OAAA;YAAA4B,QAAA,EACGrB,eAAe,CAACgB,YAAY,CAACW,GAAG,CAAC,CAACG,WAAW,EAAED,KAAK,kBACnDpC,OAAA;cAAA4B,QAAA,EAAiBS;YAAW,GAAnBD,KAAK;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAmB,CAClC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,gBAENhC,OAAA;UAAKsC,GAAG,EAAExC,UAAW;UAACyC,GAAG,EAAC,YAAY;UAACN,SAAS,EAAC;QAAa;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CACjE,eACDhC,OAAA;UAAKiC,SAAS,EAAC,gBAAgB;UAAAL,QAAA,gBAC7B5B,OAAA;YAAA4B,QAAA,EAAI;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChBhC,OAAA;YAAMwC,QAAQ,EAAEf,YAAa;YAAAG,QAAA,gBAC3B5B,OAAA;cACEyC,KAAK,EAAEpC,WAAY;cACnBqC,QAAQ,EAAGhB,CAAC,IAAKpB,cAAc,CAACoB,CAAC,CAACiB,MAAM,CAACF,KAAK,CAAE;cAChDG,WAAW,EAAC,6CAA6C;cACzDC,IAAI,EAAE,CAAE;cACRC,IAAI,EAAE;YAAG;cAAAjB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CAAC,eACFhC,OAAA;cAAA6B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACNhC,OAAA;cAAQ+C,IAAI,EAAC,QAAQ;cAACd,SAAS,EAAC,iBAAiB;cAAAL,QAAA,EAC9CnB,OAAO,GACJ,eAAe,GACfF,eAAe,GACf,YAAY,GACZ;YAAU;cAAAsB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACR,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA,eACN,CAAC;AAEP;AAAC5B,EAAA,CA1FQD,UAAU;AAAA6C,EAAA,GAAV7C,UAAU;AA4FnB,eAAeA,UAAU;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
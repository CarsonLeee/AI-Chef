{"ast":null,"code":"var _jsxFileName = \"/Users/carson/Desktop/Projects/AI-Chef/src/RecipeList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./RecipeList.css\";\nimport Navbar from \"./Navbar\";\nimport robotImage from \"./images/robot-image.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction RecipeList() {\n  _s();\n  const [ingredients, setIngredients] = useState(\"\");\n  const [generatedRecipe, setGeneratedRecipe] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const generateRecipes = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(`http://localhost:3001/generate-recipe?ingredients=${encodeURIComponent(ingredients)}`);\n      const recipeText = await response.text();\n      console.log(\"Generated recipe:\", recipeText);\n      const [name, ...rest] = recipeText.split(\"\\n\\n\");\n      const [ingredients, instructions] = rest.join(\"\\n\\n\").split(\"\\n\\n\");\n      const recipe = {\n        name: name.replace(\"Recipe Name:\\n\", \"\"),\n        ingredients: ingredients.replace(\"Ingredients:\\n\", \"\").split(\"\\n\").map(i => i.replace(\"- \", \"\")),\n        instructions: instructions.replace(\"Instructions:\\n\", \"\")\n      };\n      setGeneratedRecipe(recipe);\n    } catch (error) {\n      console.error(\"Error generating recipe:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  Ç;\n  const handleSubmit = e => {\n    e.preventDefault();\n    generateRecipes();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-container\",\n        children: [generatedRecipe ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"generated-recipe\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Recipe Name: \", generatedRecipe.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Ingredients:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: generatedRecipe.ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: ingredient\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Instructions:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: generatedRecipe.instructions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: robotImage,\n          alt: \"Robot Chef\",\n          className: \"robot-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"AI Chef\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: ingredients,\n              onChange: e => setIngredients(e.target.value),\n              placeholder: \"Enter the ingredients you have one per line\",\n              rows: 5,\n              cols: 50\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"generate-button\",\n              children: loading ? \"Generating...\" : generatedRecipe ? \"Regenerate\" : \"Generate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(RecipeList, \"31ZKtY0cT54JA5wc+jhn24m/4RQ=\");\n_c = RecipeList;\nexport default RecipeList;\nvar _c;\n$RefreshReg$(_c, \"RecipeList\");","map":{"version":3,"names":["React","useState","Navbar","robotImage","jsxDEV","_jsxDEV","Fragment","_Fragment","RecipeList","_s","ingredients","setIngredients","generatedRecipe","setGeneratedRecipe","loading","setLoading","generateRecipes","response","fetch","encodeURIComponent","recipeText","text","console","log","name","rest","split","instructions","join","recipe","replace","map","i","error","Ç","handleSubmit","e","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","className","ingredient","index","src","alt","onSubmit","value","onChange","target","placeholder","rows","cols","type","_c","$RefreshReg$"],"sources":["/Users/carson/Desktop/Projects/AI-Chef/src/RecipeList.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./RecipeList.css\";\nimport Navbar from \"./Navbar\";\nimport robotImage from \"./images/robot-image.png\";\n\nfunction RecipeList() {\n  const [ingredients, setIngredients] = useState(\"\");\n  const [generatedRecipe, setGeneratedRecipe] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const generateRecipes = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(\n        `http://localhost:3001/generate-recipe?ingredients=${encodeURIComponent(ingredients)}`\n      );\n  \n      const recipeText = await response.text();\n      console.log(\"Generated recipe:\", recipeText);\n  \n      const [name, ...rest] = recipeText.split(\"\\n\\n\");\n      const [ingredients, instructions] = rest.join(\"\\n\\n\").split(\"\\n\\n\");\n  \n      const recipe = {\n        name: name.replace(\"Recipe Name:\\n\", \"\"),\n        ingredients: ingredients\n          .replace(\"Ingredients:\\n\", \"\")\n          .split(\"\\n\")\n          .map((i) => i.replace(\"- \", \"\")),\n        instructions: instructions.replace(\"Instructions:\\n\", \"\"),\n      };\n  \n      setGeneratedRecipe(recipe);\n    } catch (error) {\n      console.error(\"Error generating recipe:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\nÇ  \n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    generateRecipes();\n  };\n\n  return (\n    <>\n      <Navbar />\n      <div className=\"App\">\n        <div className=\"content-container\">\n          {generatedRecipe ? (\n            <div className=\"generated-recipe\">\n              <h2>Recipe Name: {generatedRecipe.name}</h2>\n              <h3>Ingredients:</h3>\n              <ul>\n                {generatedRecipe.ingredients.map((ingredient, index) => (\n                  <li key={index}>{ingredient}</li>\n                ))}\n              </ul>\n              <h3>Instructions:</h3>\n              <p>{generatedRecipe.instructions}</p>\n            </div>\n          ) : (\n            <img\n              src={robotImage}\n              alt=\"Robot Chef\"\n              className=\"robot-image\"\n            />\n          )}\n          <div className=\"form-container\">\n            <h1>AI Chef</h1>\n            <form onSubmit={handleSubmit}>\n              <textarea\n                value={ingredients}\n                onChange={(e) => setIngredients(e.target.value)}\n                placeholder=\"Enter the ingredients you have one per line\"\n                rows={5}\n                cols={50}\n              />\n              <br />\n              <button type=\"submit\" className=\"generate-button\">\n                {loading\n                  ? \"Generating...\"\n                  : generatedRecipe\n                  ? \"Regenerate\"\n                  : \"Generate\"}\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default RecipeList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/carson/Desktop/AI-Chef/src/RecipeList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ScrollTrigger from \"react-scroll-trigger\";\nimport \"./RecipeList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RecipeList() {\n  _s();\n  // API Key: 808c804f9a254e5cbafaccc95464ce05\n  const [ingredients, setIngredients] = useState(\"\");\n  const [recipes, setRecipes] = useState([]);\n  const [visibleRecipes, setVisibleRecipes] = useState([]);\n  const [buttonClicked, setButtonClicked] = useState(false);\n  const fetchRecipes = async () => {\n    const ingredientsList = ingredients.split(\"\\n\").join(\",\");\n    const apiUrl = `https://api.spoonacular.com/recipes/findByIngredients?ingredients=${encodeURIComponent(ingredientsList)}&number=5&apiKey=808c804f9a254e5cbafaccc95464ce05`;\n    try {\n      const response = await fetch(apiUrl);\n      if (!response.ok) {\n        throw new Error(`HTTP error ${response.status}`);\n      }\n      const data = await response.json();\n      console.log(\"Recipes data:\", data);\n\n      // Fetch recipe details for all recipes\n      const recipeDetailsPromises = data.map(recipe => fetchRecipeDetails(recipe.id));\n      const recipeDetails = await Promise.all(recipeDetailsPromises);\n      setRecipes(recipeDetails);\n    } catch (error) {\n      console.error(\"Error fetching recipes:\", error);\n    }\n  };\n  const onEnterViewport = recipeId => {\n    setVisibleRecipes(prevVisibleRecipes => {\n      if (!prevVisibleRecipes.includes(recipeId)) {\n        return [...prevVisibleRecipes, recipeId];\n      }\n      return prevVisibleRecipes;\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetchRecipes();\n    setButtonClicked(true);\n  };\n  const fetchRecipeDetails = async recipeId => {\n    var _data$analyzedInstruc;\n    const response = await fetch(`https://api.spoonacular.com/recipes/${recipeId}/information?apiKey=808c804f9a254e5cbafaccc95464ce05`);\n    const data = await response.json();\n\n    // Extract ingredients and instructions from the response\n    const ingredients = data.extendedIngredients.map(ingredient => ingredient.original);\n    const instructions = ((_data$analyzedInstruc = data.analyzedInstructions[0]) === null || _data$analyzedInstruc === void 0 ? void 0 : _data$analyzedInstruc.steps.map(step => step.step)) || [];\n\n    // Return the recipe object with the ingredients and instructions\n    return {\n      ...data,\n      ingredients,\n      instructions\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"AI Chef\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: ingredients,\n        onChange: e => setIngredients(e.target.value),\n        placeholder: \"Enter the ingredients you have one per line\",\n        rows: 5,\n        cols: 50\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: buttonClicked ? \"Regenerate\" : \"Generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipe-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-column\",\n        children: recipes && recipes.filter((_, index) => index % 2 === 0).map((recipe, index) => {\n          return renderRecipe(recipe, index);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-column\",\n        children: recipes && recipes.filter((_, index) => index % 2 === 1).map((recipe, index) => {\n          return renderRecipe(recipe, index);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n  function renderRecipe(recipe, index) {\n    const recipeElement = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `recipe ${visibleRecipes.includes(recipe.id) || index === 0 ? \"visible\" : \"\"}`,\n      onClick: () => fetchRecipeDetails(recipe.id),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: recipe.image,\n          alt: recipe.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: recipe.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: recipe.ingredients && recipe.ingredients.map(ingredient => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: ingredient\n          }, ingredient.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Instructions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: recipe.instructions && recipe.instructions.map(instruction => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: instruction\n          }, instruction.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, recipe.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this);\n    if (index === 0) {\n      return recipeElement;\n    } else {\n      return /*#__PURE__*/_jsxDEV(ScrollTrigger, {\n        onEnter: () => onEnterViewport(recipe.id),\n        triggerOnLoad: false,\n        children: recipeElement\n      }, recipe.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this);\n    }\n  }\n}\n_s(RecipeList, \"+W/8alUtIbeC99wCa/8NoBOZOqw=\");\n_c = RecipeList;\nexport default RecipeList;\nvar _c;\n$RefreshReg$(_c, \"RecipeList\");","map":{"version":3,"names":["React","useState","ScrollTrigger","jsxDEV","_jsxDEV","RecipeList","_s","ingredients","setIngredients","recipes","setRecipes","visibleRecipes","setVisibleRecipes","buttonClicked","setButtonClicked","fetchRecipes","ingredientsList","split","join","apiUrl","encodeURIComponent","response","fetch","ok","Error","status","data","json","console","log","recipeDetailsPromises","map","recipe","fetchRecipeDetails","id","recipeDetails","Promise","all","error","onEnterViewport","recipeId","prevVisibleRecipes","includes","handleSubmit","e","preventDefault","_data$analyzedInstruc","extendedIngredients","ingredient","original","instructions","analyzedInstructions","steps","step","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","rows","cols","type","filter","_","index","renderRecipe","recipeElement","onClick","src","image","alt","title","instruction","onEnter","triggerOnLoad","_c","$RefreshReg$"],"sources":["/Users/carson/Desktop/AI-Chef/src/RecipeList.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport ScrollTrigger from \"react-scroll-trigger\";\nimport \"./RecipeList.css\";\n\nfunction RecipeList() {\n  // API Key: 808c804f9a254e5cbafaccc95464ce05\n  const [ingredients, setIngredients] = useState(\"\");\n  const [recipes, setRecipes] = useState([]);\n  const [visibleRecipes, setVisibleRecipes] = useState([]);\n  const [buttonClicked, setButtonClicked] = useState(false);\n\n\n  const fetchRecipes = async () => {\n    const ingredientsList = ingredients.split(\"\\n\").join(\",\");\n    const apiUrl = `https://api.spoonacular.com/recipes/findByIngredients?ingredients=${encodeURIComponent(\n      ingredientsList\n    )}&number=5&apiKey=808c804f9a254e5cbafaccc95464ce05`;\n\n    try {\n      const response = await fetch(apiUrl);\n      if (!response.ok) {\n        throw new Error(`HTTP error ${response.status}`);\n      }\n      const data = await response.json();\n      console.log(\"Recipes data:\", data);\n\n      // Fetch recipe details for all recipes\n      const recipeDetailsPromises = data.map((recipe) =>\n        fetchRecipeDetails(recipe.id)\n      );\n      const recipeDetails = await Promise.all(recipeDetailsPromises);\n\n      setRecipes(recipeDetails);\n    } catch (error) {\n      console.error(\"Error fetching recipes:\", error);\n    }\n  };\n\n  const onEnterViewport = (recipeId) => {\n    setVisibleRecipes((prevVisibleRecipes) => {\n      if (!prevVisibleRecipes.includes(recipeId)) {\n        return [...prevVisibleRecipes, recipeId];\n      }\n      return prevVisibleRecipes;\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    fetchRecipes();\n    setButtonClicked(true);\n  };\n\n  const fetchRecipeDetails = async (recipeId) => {\n    const response = await fetch(\n      `https://api.spoonacular.com/recipes/${recipeId}/information?apiKey=808c804f9a254e5cbafaccc95464ce05`\n    );\n    const data = await response.json();\n\n    // Extract ingredients and instructions from the response\n    const ingredients = data.extendedIngredients.map(\n      (ingredient) => ingredient.original\n    );\n    const instructions =\n      data.analyzedInstructions[0]?.steps.map((step) => step.step) || [];\n\n    // Return the recipe object with the ingredients and instructions\n    return { ...data, ingredients, instructions };\n  };\n  return (\n    <div className=\"App\">\n      <h1>AI Chef</h1>\n      <form onSubmit={handleSubmit}>\n        <textarea\n          value={ingredients}\n          onChange={(e) => setIngredients(e.target.value)}\n          placeholder=\"Enter the ingredients you have one per line\"\n          rows={5}\n          cols={50}\n        />\n        <br />\n        <button type=\"submit\">{buttonClicked ? \"Regenerate\" : \"Generate\"}</button>\n      </form>\n      <div className=\"recipe-container\">\n        <div className=\"left-column\">\n          {recipes &&\n            recipes\n              .filter((_, index) => index % 2 === 0)\n              .map((recipe, index) => {\n                return renderRecipe(recipe, index);\n              })}\n        </div>\n        <div className=\"right-column\">\n          {recipes &&\n            recipes\n              .filter((_, index) => index % 2 === 1)\n              .map((recipe, index) => {\n                return renderRecipe(recipe, index);\n              })}\n        </div>\n      </div>\n    </div>\n  );\n\n  function renderRecipe(recipe, index) {\n    const recipeElement = (\n      <div\n        key={recipe.id}\n        className={`recipe ${\n          visibleRecipes.includes(recipe.id) || index === 0 ? \"visible\" : \"\"\n        }`}\n        onClick={() => fetchRecipeDetails(recipe.id)}\n      >\n        <div className=\"image-container\">\n          <img src={recipe.image} alt={recipe.title} />\n        </div>\n        <div className=\"instructions\">\n          <h2>{recipe.title}</h2>\n          <h3>Ingredients</h3>\n          <ul>\n            {recipe.ingredients &&\n              recipe.ingredients.map((ingredient) => (\n                <li key={ingredient.id}>{ingredient}</li>\n              ))}\n          </ul>\n          <h3>Instructions</h3>\n          <ol>\n            {recipe.instructions &&\n              recipe.instructions.map((instruction) => (\n                <li key={instruction.id}>{instruction}</li>\n              ))}\n          </ol>\n        </div>\n      </div>\n    );\n\n    if (index === 0) {\n      return recipeElement;\n    } else {\n      return (\n        <ScrollTrigger\n          key={recipe.id}\n          onEnter={() => onEnterViewport(recipe.id)}\n          triggerOnLoad={false}\n        >\n          {recipeElement}\n        </ScrollTrigger>\n      );\n    }\n  }\n}\n\nexport default RecipeList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}